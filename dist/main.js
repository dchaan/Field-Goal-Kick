/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("document.addEventListener('DOMContentLoaded', function () {\n  var canvas = document.getElementById(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  document.addEventListener(\"keydown\", keyDown, false);\n  document.addEventListener(\"keyup\", keyUp, false);\n  document.getElementById(\"start-button\").addEventListener(\"click\", play); // document.getElementById('start-button').addEventListener('click', togglePause);\n\n  var left = false;\n  var right = false;\n  var gameOver = true;\n  var score = 0;\n  var numBalls = 0;\n  var rad = 30;\n  var paused = false; // key funcs\n\n  function keyDown(e) {\n    if (e.keyCode == 39) {\n      right = true;\n    } else if (e.keyCode == 37) {\n      left = true;\n    }\n  }\n\n  function keyUp(e) {\n    if (e.keyCode == 39) {\n      right = false;\n    } else if (e.keyCode == 37) {\n      left = false;\n    }\n  }\n\n  var ball = {\n    x: [],\n    y: [],\n    state: []\n  }; // place ball at random x coordinate\n\n  function placeBall() {\n    if (Math.random() < .02) {\n      ball.x.push(Math.random() * canvas.width - 50);\n      ball.y.push(0);\n      ball.state.push(true);\n    }\n\n    numBalls = ball.x.length;\n  }\n\n  function drawBall() {\n    for (var i = 0; i < numBalls; i++) {\n      if (ball.state[i] === true) {\n        var ballImg = new Image();\n        ballImg.src = \"./assets/football.png\";\n        ctx.drawImage(ballImg, ball.x[i], ball.y[i], 30, 20);\n      }\n    }\n  }\n\n  var catcher = {\n    x: 380,\n    y: 600,\n    w: 80,\n    h: 100\n  };\n\n  function drawCatcher() {\n    var catcherImg = new Image();\n    catcherImg.src = \"./assets/catcher.png\";\n    ctx.drawImage(catcherImg, catcher.x, catcher.y, catcher.w, catcher.h);\n  } // moves objects\n\n\n  function playUpdate() {\n    if (left && catcher.x > 0) {\n      catcher.x -= 10;\n    }\n\n    if (right && catcher.x + catcher.w < canvas.width) {\n      catcher.x += 10;\n    }\n\n    for (var i = 0; i < numBalls; i++) {\n      ball.y[i] += 5;\n    } // collision detection\n\n\n    for (var _i = 0; _i < numBalls; _i++) {\n      if (ball.state[_i]) {\n        if (catcher.x < ball.x[_i] + rad && catcher.x + 30 + rad > ball.x[_i] && catcher.y < ball.y[_i] + rad && catcher.y + 30 > ball.y[_i]) {\n          score++;\n          ball.state[_i] = false;\n        }\n      }\n\n      if (ball.y[_i] + rad > canvas.height) {\n        ball.x.shift();\n        ball.y.shift();\n        ball.state.shift();\n      }\n    }\n  }\n\n  function endGame() {\n    ball.x = [];\n    ball.y = [];\n    ball.state = [];\n    gameOver = true;\n  }\n\n  function play() {\n    gameOver = false;\n    score = 0;\n  }\n\n  function togglePause() {\n    paused = !paused;\n    draw();\n  }\n\n  function draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (!gameOver) {\n      drawCatcher();\n      drawBall();\n      playUpdate();\n      placeBall();\n      ctx.fillStyle = \"black\";\n      ctx.font = \"25px Times New Roman\";\n      ctx.textAlign = \"left\";\n      ctx.fillText(\"Score: \" + score, 50, 30);\n    }\n\n    requestAnimationFrame(draw);\n  }\n\n  draw();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY2F0dGVyLWJhbGwvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;